"""
Working test for ARQA HTML ingestion system.
This demonstrates the Arabic HTML processing capabilities.
"""

import os
import sys
from pathlib import Path

# Add the src directory to the Python path
sys.path.append(str(Path(__file__).parent / 'src'))

# Import from the main ARQA package
try:
    from arqa.simple_ingest import SimpleDocumentIngestor
    print("โ Using ARQA simplified ingestor")
except ImportError as e:
    print(f"โ Could not import ARQA ingestor: {e}")
    print("โ Make sure BeautifulSoup4 is installed: pip install beautifulsoup4")
    sys.exit(1)


def create_sample_html_files():
    """Create sample Arabic HTML files for testing."""
    
    # Create a test directory
    test_dir = Path("test_html_articles")
    test_dir.mkdir(exist_ok=True)
    
    # Sample Arabic HTML articles
    sample_articles = [
        {
            "filename": "arabic_science.html",
            "title": "ุงูุนููู ูู ุงูุญุถุงุฑุฉ ุงูุฅุณูุงููุฉ",
            "content": """
            <html dir="rtl" lang="ar">
            <head>
                <meta charset="UTF-8">
                <title>ุงูุนููู ูู ุงูุญุถุงุฑุฉ ุงูุฅุณูุงููุฉ</title>
            </head>
            <body>
                <h1>ุงูุนููู ูู ุงูุญุถุงุฑุฉ ุงูุฅุณูุงููุฉ</h1>
                <p>ููุฏ ุงุฒุฏูุฑุช ุงูุนููู ูู ุงูุญุถุงุฑุฉ ุงูุฅุณูุงููุฉ ุจุดูู ูุฐูู ุฎูุงู ุงูุนุตูุฑ ุงููุณุทู. ููุฏ ุณุงูู ุงูุนููุงุก ุงููุณูููู ูู ุชุทููุฑ ุงูุนุฏูุฏ ูู ุงููุฌุงูุงุช ุงูุนูููุฉ ูุซู ุงูุทุจ ูุงูุฑูุงุถูุงุช ูุงูููู ูุงูููููุงุก.</p>
                
                <h2>ุงูุทุจ ุงูุฅุณูุงูู</h2>
                <p>ุจุฑุฒ ูู ุงูุทุจ ุงูุฅุณูุงูู ุฃุทุจุงุก ุนุธูุงุก ูุซู ุงุจู ุณููุง ูุงูุฑุงุฒู ูุงุจู ุงููููุณ. ููุฏ ูุถุน ุงุจู ุณููุง ูุชุงุจ ุงููุงููู ูู ุงูุทุจ ุงูุฐู ุธู ูุฑุฌุนุงู ุฃุณุงุณูุงู ูู ุฃูุฑูุจุง ูุนุฏุฉ ูุฑูู.</p>
                
                <h2>ุงูุฑูุงุถูุงุช</h2>
                <p>ูู ูุฌุงู ุงูุฑูุงุถูุงุชุ ุทูุฑ ุงูุนููุงุก ุงููุณูููู ุนูู ุงูุฌุจุฑ ูุฃุณุณูุง ููุงุนุฏ ุงูุฎูุงุฑุฒููุงุช. ุงูุฎูุงุฑุฒูู ูู ูู ุฃุนุทู ุงุณูู ููููุฉ "ุฎูุงุฑุฒููุฉ" ุงููุณุชุฎุฏูุฉ ุงูููู ูู ุนููู ุงูุญุงุณูุจ.</p>
                
                <h2>ุงูููู</h2>
                <p>ูู ุนูู ุงููููุ ุจูู ุงูุนููุงุก ุงููุณูููู ูุฑุงุตุฏ ููููุฉ ูุชูุฏูุฉ ููุถุนูุง ุฌุฏุงูู ููููุฉ ุฏูููุฉ. ููุง ุตุญุญูุง ูุซูุฑุงู ูู ุงููุธุฑูุงุช ุงูุฅุบุฑูููุฉ ุงููุฏููุฉ.</p>
                
                <div class="conclusion">
                    <p>ุฅู ุฅุณูุงูุงุช ุงูุนููุงุก ุงููุณูููู ูู ุงูุนููู ูุงูุช ุฃุณุงุณุงู ูููุงู ููููุถุฉ ุงูุนูููุฉ ุงูุฃูุฑูุจูุฉ ูุงุญูุงู.</p>
                </div>
            </body>
            </html>
            """
        },
        {
            "filename": "artificial_intelligence.html", 
            "title": "ุงูุฐูุงุก ุงูุงุตุทูุงุนู",
            "content": """
            <html dir="rtl" lang="ar">
            <head>
                <meta charset="UTF-8">
                <title>ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูู ุงูุนุตุฑ ุงูุญุฏูุซ</title>
            </head>
            <body>
                <h1>ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูู ุงูุนุตุฑ ุงูุญุฏูุซ</h1>
                <p>ูุดูุฏ ูุฌุงู ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุชุทูุฑุงู ูุณุชูุฑุงู ูุณุฑูุนุงู ูู ุงูุณููุงุช ุงูุฃุฎูุฑุฉ. ูุฐุง ุงูุชุทูุฑ ูุคุซุฑ ุนูู ุฌููุน ุฌูุงูุจ ุงูุญูุงุฉ ูู ุงูุทุจ ุฅูู ุงูุชุนููู ูุงูููู.</p>
                
                <h2>ุชุนูู ุงูุขูุฉ</h2>
                <p>ุชุนูู ุงูุขูุฉ ูู ูุฑุน ูู ุงูุฐูุงุก ุงูุงุตุทูุงุนู ููููู ุงูุญุงุณูุจ ูู ุงูุชุนูู ุจุฏูู ุจุฑูุฌุฉ ุตุฑูุญุฉ. ูุณุชุฎุฏู ุฎูุงุฑุฒููุงุช ูุนูุฏุฉ ูุชุญููู ุงูุจูุงูุงุช ูุงุณุชุฎุฑุงุฌ ุงูุฃููุงุท.</p>
                
                <h2>ูุนุงูุฌุฉ ุงููุบุฉ ุงูุทุจูุนูุฉ</h2>
                <p>ูุนุงูุฌุฉ ุงููุบุฉ ุงูุทุจูุนูุฉ ุชุชูุญ ููุญุงุณูุจ ููู ูุชุญููู ุงููุบุฉ ุงูุจุดุฑูุฉ. ูุฐุง ูุดูู ุงูุชุฑุฌูุฉ ุงูุขููุฉุ ูุชุญููู ุงููุดุงุนุฑุ ูุงูุฅุฌุงุจุฉ ุนูู ุงูุฃุณุฆูุฉ.</p>
                
                <h2>ุงูุชุทุจููุงุช ุงูุญุฏูุซุฉ</h2>
                <p>ูุณุชุฎุฏู ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูููู ูู ุงูุณูุงุฑุงุช ุฐุงุชูุฉ ุงูููุงุฏุฉุ ูุงููุณุงุนุฏุงุช ุงูุฐููุฉุ ูุฃูุธูุฉ ุงูุชูุตูุฉุ ูุงูุชุดุฎูุต ุงูุทุจู.</p>
                
                <h2>ุงูุชุญุฏูุงุช ูุงูุฃุฎูุงููุงุช</h2>
                <p>ุฑุบู ุงูููุงุฆุฏ ุงูุนุธููุฉุ ููุงุฌู ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุชุญุฏูุงุช ุฃุฎูุงููุฉ ูุซู ุงูุฎุตูุตูุฉุ ูุงูุชุญูุฒ ูู ุงูุฎูุงุฑุฒููุงุชุ ูุชุฃุซูุฑู ุนูู ุณูู ุงูุนูู.</p>
            </body>
            </html>
            """
        }
    ]
    
    # Write the HTML files
    created_files = []
    for article in sample_articles:
        file_path = test_dir / article["filename"]
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(article["content"])
        created_files.append(file_path)
        print(f"๐ Created: {file_path}")
    
    return created_files


def main():
    """Main test function."""
    print("๐ Starting Standalone HTML Ingestion Test")
    print("=" * 50)
    
    # Create sample HTML files
    print("\n๐ Creating sample Arabic HTML files...")
    html_files = create_sample_html_files()
    
    # Initialize the ingestor
    print("\n๐ง Initializing DocumentIngestor...")
    ingestor = SimpleDocumentIngestor(
        output_dir="test_output",
        chunk_size=200
    )
    
    # Process each HTML file
    print("\n๐ Processing HTML files...")
    all_chunks = []
    
    for html_file in html_files:
        print(f"\n๐ Processing: {html_file.name}")
        
        try:
            # Process the HTML file
            chunks = ingestor.process_html_file(str(html_file))
            all_chunks.extend(chunks)
            
            print(f"   โ Generated {len(chunks)} chunks")
            
            # Show first chunk as example
            if chunks:
                first_chunk = chunks[0]
                print(f"   ๐ First chunk preview:")
                print(f"      Title: {first_chunk['metadata'].get('title', 'N/A')}")
                print(f"      Content: {first_chunk['content'][:100]}...")
                print(f"      Words: {first_chunk['metadata']['chunk_length']}")
                
        except Exception as e:
            print(f"   โ Error processing {html_file.name}: {e}")
    
    # Save all processed documents
    print(f"\n๐พ Saving {len(all_chunks)} total chunks...")
    try:
        ingestor.save_documents(all_chunks)
        output_file = ingestor.output_dir / "processed_documents.json"
        print(f"   โ Saved to: {output_file}")
        
        # Show statistics
        total_words = sum(chunk['metadata']['chunk_length'] for chunk in all_chunks)
        avg_words = total_words / len(all_chunks) if all_chunks else 0
        
        print(f"\n๐ Processing Statistics:")
        print(f"   ๐ Total documents: {len(html_files)}")
        print(f"   ๐งฉ Total chunks: {len(all_chunks)}")
        print(f"   ๐ค Total words: {total_words}")
        print(f"   ๐ Average words per chunk: {avg_words:.1f}")
        
        # Show a sample chunk in detail  
        if all_chunks:
            print(f"\n๐ Sample Processed Chunk:")
            sample = all_chunks[0]
            print(f"   ๐ Title: {sample['metadata'].get('title', 'N/A')}")
            print(f"   ๐ Source: {sample['metadata'].get('filename', 'N/A')}")
            print(f"   ๐ค Words: {sample['metadata']['chunk_length']}")
            print(f"   ๐ Content preview: {sample['content'][:200]}...")
        
    except Exception as e:
        print(f"   โ Error saving documents: {e}")
    
    print("\nโ Test completed successfully!")
    print("๐ Check the 'test_output' directory for processed results.")
    print("๐ Check the 'test_html_articles' directory for sample HTML files.")


if __name__ == "__main__":
    main()
